//
//  LibrariesPresenter.swift
//  TWKamu
//
//  Created by Guilherme Coelho on 13/08/18.
//  Copyright (c) 2018 ThoughtWorks. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class LibrariesPresenter {
  
  // MARK: - Private properties -

  private unowned let view: LibrariesViewInterface
  private let wireframe: LibrariesWireframeInterface!
  private let librariesInteractor: RetrieveLibrariesInteractorInterface!
  
  // MARK: - Data Source
  
  private var librariesItem: [KamuLibrary] = [] {
    didSet {
      if librariesItem != oldValue {
        view.updateTableView()
      }
    }
  }
  
  // MARK: - Lifecycle -
  
  init(wireframe: LibrariesWireframeInterface,
       view: LibrariesViewInterface,
       librariesInteractor: RetrieveLibrariesInteractorInterface) {
    self.wireframe = wireframe
    self.view = view
    self.librariesInteractor = librariesInteractor
  }
  
  // MARK: - Methods
  
  func viewWillAppear(animated: Bool) {
    
    librariesInteractor.getLibraries()
  }
  
}

// MARK: - Extensions -

extension LibrariesPresenter: RetrieveLibrariesInteractorReponse {
  
  func getLibrariesSuccess(libraries: [KamuLibrary]) {
    librariesItem = libraries
  }
  
  func getLibrariesError(errorMessage: String) {
    
  }
}

extension LibrariesPresenter: LibrariesPresenterInterface {
  
  func libraryCellId() -> String {
    return KamuConstants.Cells.library
  }
  
  func totalItems() -> Int {
    return librariesItem.count
  }
  
  func cellFor(index: IndexPath, tableView: UITableView) -> UITableViewCell {
    
    let cellId = self.libraryCellId()
    
    guard let cell = tableView.dequeueReusableCell(withIdentifier: cellId) as? KamuLibraryCell
      else {
        return UITableViewCell()
    }
    
    if librariesItem.isEmpty {
      return UITableViewCell()
    }
    
    let item = librariesItem[index.row]
    
    cell.setCity(city: item.cityName)
        
    return cell
  }
  
  func clickInCellForRow(index: IndexPath) {
    let library = librariesItem[index.row]
    wireframe.navigate(to: .goToLibrary(library))
  }
  
}
