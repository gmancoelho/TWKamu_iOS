//
//  KamuBookDetailPresenter.swift
//  TWKamu
//
//  Created by Guilherme Coelho on 23/08/18.
//  Copyright (c) 2018 ThoughtWorks. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class KamuBookDetailPresenter {
  
  // MARK: - Private properties -
  
  private unowned let view: KamuBookDetailViewInterface
  private let wireframe: KamuBookDetailWireframeInterface
  
  private let book: KamuBook
  
  // MARK: - Lifecycle -
  
  init(wireframe: KamuBookDetailWireframeInterface,
       view: KamuBookDetailViewInterface,
       book: KamuBook) {
    
    self.wireframe = wireframe
    self.view = view
    self.book = book

  }
  
  // MARK: - Methods
  
  func viewDidLoad() {
    getBookCover()
    
    view.updateBookAuthor(author: book.author)
    view.updateBookPages(pages: book.numberOfPages.description)
    view.updateBookTitle(title: book.title)
    view.updateBookPubDate(date: book.publicationDate)
    view.updateBookSumary(sumary: book.desc)
    view.updateBookAvailability(availability: "1")

  }
  
  private func getBookCover() {
    
    let coverImageView = UIImageView()
    
    if let imgUrl = URL(string: book.imgUrl) {
      
      coverImageView.pin_setImage(from: imgUrl) { (result) in
        
        if let img = result.image {
          self.view.updateBookCover(bookCover: img, contentMode: .scaleToFill)
        } else {
          let placeHolder = UIImage(named: "placeholderIcon")!
          self.view.updateBookCover(bookCover: placeHolder, contentMode: .center)
        }
      }
      
    }
  }
  
}

// MARK: - Extensions -

extension KamuBookDetailPresenter: KamuBookDetailPresenterInterface {
}
